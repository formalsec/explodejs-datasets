'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var filters=new Map,limiters=new Map;function filter(a,b){if('string'!=typeof a)throw new TypeError('First argument must be a string.');if('function'!=typeof b)throw new TypeError('Second argument must be a function.');if(filters.has(a))throw new Error('A filter named '+a+' is already registered.');filters.set(a,b)}function limiter(a,b){if('string'!=typeof a)throw new TypeError('First argument must be a string.');if('function'!=typeof b)throw new TypeError('Second argument must be a function.');if(limiters.has(a))throw new Error('A limiter named '+a+' is already registered.');limiters.set(a,b)}function compileRawExpression(a){return new Function('context','tempVars','const sandbox = $nxCompileToSandbox(context, tempVars)\n    try { with (sandbox) { return '+a+' } } catch (err) {\n      if (!(err instanceof TypeError)) throw err\n    }\n    $nxClearSandbox()')}function compileRawCode(a){return new Function('context','tempVars','const sandbox = $nxCompileToSandbox(context, tempVars)\n    with (sandbox) { '+a+' }\n    $nxClearSandbox()')}var filterRegex=/(?:[^\|]|\|\|)+/g,limiterRegex=/(?:[^&]|&&)+/g,argsRegex=/\S+/g;function parseExpression(a){var b=a.match(filterRegex);if(1===b.length)return compileRawExpression(b[0]);for(var c={exec:compileRawExpression(b[0]),filters:[]},d=1;d<b.length;d++){var e=b[d].match(argsRegex),f=e.shift(),g=filters.get(f);if(!g)throw new Error('There is no filter named: '+f+'.');c.filters.push({effect:g,argExpressions:e.map(compileRawExpression)})}return c}function parseCode(a){var b=a.match(limiterRegex);if(1===b.length)return compileRawCode(b[0]);for(var c={exec:compileRawCode(b[0]),limiters:[]},d=1;d<b.length;d++){var e=b[d].match(argsRegex),f=e.shift(),g=limiters.get(f);if(!g)throw new Error('There is no limiter named: '+f+'.');c.limiters.push({effect:g,argExpressions:e.map(compileRawExpression)})}return c}var expressionCache=new Map,codeCache=new Map;function compileExpression(a){if('string'!=typeof a)throw new TypeError('First argument must be a string.');var b=expressionCache.get(a);return b||(b=parseExpression(a),expressionCache.set(a,b)),'function'==typeof b?b:function(a,c){for(var d=b.exec(a,c),e=0,f=b.filters;e<f.length;e+=1){var g=f[e],h=g.argExpressions.map(evaluateArgExpression,a);d=g.effect.apply(g,[d].concat(h))}return d}}function compileCode(a){if('string'!=typeof a)throw new TypeError('First argument must be a string.');var b=codeCache.get(a);if(b||(b=parseCode(a),codeCache.set(a,b)),'function'==typeof b)return b;var c={};return function(a,d){function e(){if(Object.assign(c,d),f<b.limiters.length){var g=b.limiters[f++],h=g.argExpressions.map(evaluateArgExpression,a);g.effect.apply(g,[e,c].concat(h))}else b.exec(a,d)}var f=0;e()}}function evaluateArgExpression(a){return a(this)}var temp,globalObj,hasHandler={has:has},allHandlers={has:has,get:get},globals=new Set;'undefined'==typeof window?'undefined'==typeof global?'undefined'!=typeof self&&(globalObj=self):globalObj=global:globalObj=window,globalObj.$nxCompileToSandbox=toSandbox,globalObj.$nxClearSandbox=clearSandbox;function expose(){for(var a=[],b=arguments.length;b--;)a[b]=arguments[b];for(var c,d=0,e=a;d<e.length;d+=1)c=e[d],globals.add(c)}function hide(){for(var a=[],b=arguments.length;b--;)a[b]=arguments[b];for(var c,d=0,e=a;d<e.length;d+=1)c=e[d],globals.delete(c)}function hideAll(){globals.clear()}function has(a,b){return!globals.has(b)||b in a}function get(a,b){return b in temp?temp[b]:a[b]}function toSandbox(a,b){return b?(temp=b,new Proxy(a,allHandlers)):new Proxy(a,hasHandler)}function clearSandbox(){temp=void 0}exports.compileExpression=compileExpression,exports.compileCode=compileCode,exports.compileRawExpression=compileRawExpression,exports.compileRawCode=compileRawCode,exports.expose=expose,exports.hide=hide,exports.hideAll=hideAll,exports.filters=filters,exports.limiters=limiters,exports.filter=filter,exports.limiter=limiter;